"""Initial migration

Revision ID: f92a17482f1d
Revises: 
Create Date: 2024-11-12 16:09:38.830149

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f92a17482f1d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('logo', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('perf_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('req_headers', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('req_body', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('resp_status', sa.SmallInteger(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('employees',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('nik', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('position', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_employees_nik'), 'employees', ['nik'], unique=True)
    op.create_index(op.f('ix_employees_user_name'), 'employees', ['user_name'], unique=True)
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_positions_id'), 'positions', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_applications_id'), 'applications', ['id'], unique=False)
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('check_in', sa.DateTime(), nullable=True),
    sa.Column('check_out', sa.DateTime(), nullable=True),
    sa.Column('photo_in', sa.String(), nullable=True),
    sa.Column('photo_out', sa.String(), nullable=True),
    sa.Column('late', sa.Integer(), nullable=True),
    sa.Column('overtime', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_table('daily_salary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('hours_rate', sa.Integer(), nullable=True),
    sa.Column('hours_worked', sa.Integer(), nullable=True),
    sa.Column('standard_hours', sa.Integer(), nullable=True),
    sa.Column('max_late', sa.Integer(), nullable=True),
    sa.Column('late_deduction', sa.Integer(), nullable=True),
    sa.Column('min_overtime', sa.Integer(), nullable=True),
    sa.Column('overtime_pay', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_salary_id'), 'daily_salary', ['id'], unique=False)
    op.create_table('employee_daily_salary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('work_date', sa.DateTime(), nullable=False),
    sa.Column('hours_worked', sa.Integer(), nullable=True),
    sa.Column('late_deduction', sa.Integer(), nullable=True),
    sa.Column('overtime_pay', sa.Integer(), nullable=True),
    sa.Column('normal_salary', sa.Integer(), nullable=False),
    sa.Column('total_salary', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_daily_salary_id'), 'employee_daily_salary', ['id'], unique=False)
    op.create_table('employee_monthly_salary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('bonus', sa.Integer(), nullable=True),
    sa.Column('bpjs', sa.Integer(), nullable=True),
    sa.Column('tax', sa.Integer(), nullable=True),
    sa.Column('month', sa.String(), nullable=False),
    sa.Column('normal_salary', sa.Integer(), nullable=False),
    sa.Column('total_salary', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_monthly_salary_id'), 'employee_monthly_salary', ['id'], unique=False)
    op.create_table('faces',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('photo', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('Asia/Jakarta', now())"), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_table('faces')
    op.drop_index(op.f('ix_employee_monthly_salary_id'), table_name='employee_monthly_salary')
    op.drop_table('employee_monthly_salary')
    op.drop_index(op.f('ix_employee_daily_salary_id'), table_name='employee_daily_salary')
    op.drop_table('employee_daily_salary')
    op.drop_index(op.f('ix_daily_salary_id'), table_name='daily_salary')
    op.drop_table('daily_salary')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_index(op.f('ix_applications_id'), table_name='applications')
    op.drop_table('applications')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_positions_id'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_employees_user_name'), table_name='employees')
    op.drop_index(op.f('ix_employees_nik'), table_name='employees')
    op.drop_table('employees')
    op.drop_table('roles')
    op.drop_table('perf_logs')
    op.drop_table('companies')
    # ### end Alembic commands ###
